import "../common/models.tsp";

using TypeSpec.OpenAPI;

namespace OpenAI;

model CreateEmbeddingRequest {
  /**
   * Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a
   * single request, pass an array of strings or array of token arrays. Each input must not exceed
   * the max input tokens for the model (8191 tokens for `text-embedding-ada-002`) and cannot be an
   * empty string.
   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)
   * for counting tokens.
   */
  @extension("x-oaiExpandable", true)
  input: string | string[] | TokenArray | TokenArrayArray;

  /**
   * ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to
   * see all of your available models, or see our [Model overview](/docs/models/overview) for
   * descriptions of them.
   */
  @extension("x-oaiTypeLabel", "string")
  `model`: string | EMBEDDINGS_MODELS;

  /** 
   * The format to return the embeddings in. Can be either `float` or
   * [`base64`](https://pypi.org/project/pybase64/).
   */
  encoding_format?: "float" | "base64" | null = "float";

  /** 
   * The number of dimensions the resulting output embeddings should have. Only supported in
   * `text-embedding-3` and later models. 
   */
  dimensions?: safeint;

  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect
   * abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
   */
  user?: User;
}

model CreateEmbeddingResponse {
  /** The list of embeddings generated by the model. */
  data: Embedding[];
  
  /** The name of the model used to generate the embedding. */
  `model`: string;
  
  /** The object type, which is always "embedding". */
  object: "list";

  /** The usage information for the request. */
  usage: {
    /** The number of tokens used by the prompt. */
    prompt_tokens: safeint;

    /** The total number of tokens used by the request. */
    total_tokens: safeint;
  };
}

alias EMBEDDINGS_MODELS =
  | "text-embedding-ada-002"
  | "text-embedding-3-small"
  | "text-embedding-3-large";

/** Represents an embedding vector returned by embedding endpoint. */
@extension(
  "x-oaiMeta",
  {
    name: "The embedding object",
    example: | """
      {
        "object": "embedding",
        "embedding": [
          0.0023064255,
          -0.009327292,
          .... (1536 floats total for ada-002)
          -0.0028842222,
        ],
        "index": 0
      }
      """
  }
)
model Embedding {
  /** The index of the embedding in the list of embeddings. */
  index: safeint;

  /**
   * The embedding vector, which is a list of floats. The length of vector depends on the model as
   * listed in the [embedding guide](/docs/guides/embeddings).
   */
  embedding: float64[] | string;

  /** The object type, which is always "embedding". */
  object: "embedding";
}
